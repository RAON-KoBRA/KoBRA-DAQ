#####################################################################
#
#  Name:         Makefile
#  Created by:   Stefan Ritt
#
#  Contents:     Makefile for MIDAS example frontend and analyzer
#
#  $Id$
#
#####################################################################
#
#--------------------------------------------------------------------
# The MIDASSYS should be defined prior the use of this Makefile
ifndef MIDASSYS
missmidas::
	@echo "...";
	@echo "Missing definition of environment variable 'MIDASSYS' !";
	@echo "...";
endif

# get OS type from shell
OSTYPE = $(shell uname)

#--------------------------------------------------------------------
# The following lines contain specific switches for different UNIX
# systems. Find the one which matches your OS and outcomment the 
# lines below.

#-----------------------------------------
# This is for Linux
ifeq ($(OSTYPE),Linux)
OSTYPE = linux
endif

ifeq ($(OSTYPE),linux)
OS_DIR = linux
OSFLAGS = -DOS_LINUX -Dextname
CFLAGS = -g -O2 -Wall
# add to compile in 32-bit mode
# OSFLAGS += -m32
LIBS = -lm -lz -lutil -lnsl -lpthread -lrt
endif

#-----------------------
# MacOSX/Darwin is just a funny Linux
#
ifeq ($(OSTYPE),Darwin)
OSTYPE = darwin
endif

ifeq ($(OSTYPE),darwin)
OS_DIR = darwin
FF = cc
OSFLAGS = -DOS_LINUX -DOS_DARWIN -DHAVE_STRLCPY -fPIC -Wno-unused-function
LIBS = -lpthread -lz
NEED_STRLCPY=
NEED_RANLIB=1
NEED_SHLIB=
NEED_RPATH=

endif

#-----------------------------------------
# ROOT flags and libs
#
ifdef ROOTSYS
ROOTCFLAGS := $(shell  $(ROOTSYS)/bin/root-config --cflags)
ROOTCFLAGS += -DHAVE_ROOT -DUSE_ROOT
ROOTLIBS   := $(shell  $(ROOTSYS)/bin/root-config --libs) -Wl,-rpath,$(ROOTSYS)/lib
ROOTLIBS   += -lThread
else
missroot:
	@echo "...";
	@echo "Missing definition of environment variable 'ROOTSYS' !";
	@echo "...";
endif
#-------------------------------------------------------------------
# The following lines define directories. Adjust if necessary
#                 
INC_DIR   = $(MIDASSYS)/include
LIB_DIR   = $(MIDASSYS)/$(OS_DIR)/lib
SRC_DIR   = $(MIDASSYS)/src
USR_INC   = $(HOME)/online/midas_daq/include
USR_SRC   = $(HOME)/online/midas_daq/src

#VME_INC   = /usr/include
#-------------------------------------------------------------------
# List of analyzer modules
#
MODULES = ptdc_calib.o

#-------------------------------------------------------------------
# Frontend code name defaulted to frontend in this example.
# comment out the line and run your own frontend as follow:
# gmake UFE=my_frontend
#
UFE = frontend
UANA = analyzer
MIDAS2ROOT = midas2root

####################################################################
# Lines below here should not be edited
####################################################################

# MIDAS library
LIB = $(LIB_DIR)/libmidas.a

# compiler
CC = gcc 
CXX = g++ -std=c++11
CFLAGS += -I$(INC_DIR) -I$(USR_INC) -I/usr/include 
LDFLAGS +=
COPTS	=	-fPIC -DLINUX -Wall 
DEPLIBS = -lCAENVME -lcurses -lCAENV1x90SDK

all: $(UFE) $(UANA)


mfe_common.o: $(USR_SRC)/mfe_common.c
		$(CC) $(COPTS) $(CFLAGS) $(OSFLAGS) -o $@ -c $<
		
mfe_f1_ppac.o: $(USR_SRC)/mfe_f1_ppac.c
		$(CC) $(COPTS) $(CFLAGS) -DUSE_PPAC_F1 $(OSFLAGS) -o $@ -c $<		
		
mfe_f2_ppac.o: $(USR_SRC)/mfe_f2_ppac.c
		$(CC) $(COPTS) $(CFLAGS) -DUSE_PPAC_F2 $(OSFLAGS) -o $@ -c $<
 
  
$(UFE).o: $(USR_SRC)/$(UFE).c 
	$(CC) $(CFLAGS) $(OSFLAGS) -o $@ -c $<
		
$(UFE): $(UFE).o mfe_common.o mfe_f1_ppac.o mfe_f2_ppac.o \
	$(LIB) $(LIB_DIR)/mfe.o 
	$(CC) $(CFLAGS) $(OSFLAGS) -o $(UFE) \
	$(UFE).o mfe_common.o mfe_f1_ppac.o mfe_f2_ppac.o \
	$(LIB) $(LIB_DIR)/mfe.o \
	$(LDFEFLAGS) $(LIBS) $(DEPLIBS)


$(UANA): $(LIB) $(LIB_DIR)/rmana.o $(UANA).o $(MODULES)
	$(CXX) $(CFLAGS) -o $@ $(LIB_DIR)/rmana.o $(UANA).o $(MODULES) \
	$(LIB) $(LDFLAGS) $(ROOTLIBS) $(LIBS)

$(UANA).o: $(USR_SRC)/$(UANA).cxx $(USR_INC)/analyzer.h
	$(CXX) $(ROOTCFLAGS) $(CFLAGS) $(OSFLAGS) -o $@ -c $<
	
ptdc_calib.o: $(USR_SRC)/ptdc_calib.cxx $(USR_INC)/ppac_conf.h
	$(CXX) $(ROOTCFLAGS) $(CFLAGS) $(OSFLAGS) -o $@ -c $<
	
	

			
clean::
	rm -f $(UANA) $(UFE) *.o *~ \#*

#end file
